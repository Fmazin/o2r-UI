# ngninx configuration to proxy manually started microservices under one port

worker_processes 3;

events {
  worker_connections 1024;
}

http {
  client_max_body_size 10G;
  sendfile on;
  keepalive_timeout 65;
  gzip on;

  # http://nginx.org/en/docs/http/websocket.html
  map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
  }

  server {
    listen 80;

    # serve built app
    location / {
      include mime.types;
      # https://docs.nginx.com/nginx/admin-guide/web-server/serving-static-content/
      root /usr/share/nginx/html;
      index index.html;
    }

    # muncher handles most API requests
    location /api {
      include nginx-cors.conf;

      proxy_pass http://muncher:8080;
      proxy_redirect off;
      proxy_set_header Host $host;
    }

    location ~* ^/api/v1/compendium/[^/]+/binding {
      include nginx-cors.conf;

      proxy_pass http://bindings:8092;
      proxy_redirect off;
      proxy_set_header Host $host;
    }

    # split endpoint between loader for POSTs and muncher for all other operations
    location /api/v1/compendium {
      include nginx-cors.conf;

      proxy_pass http://loader:8088;
      proxy_redirect off;
      proxy_set_header Host $host;
      proxy_read_timeout 30m;

      # For requests that *are not* a POST, pass to muncher
      limit_except POST {
        proxy_pass http://muncher:8080;
      }
    }

    location ~* \.io {
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;

      proxy_pass http://informer:8082;
    }

    location /api/v1/auth/ {
      include nginx-cors.conf;

      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_pass http://bouncer:8083;
    }

    location /api/v1/user/ {
      include nginx-cors.conf;

      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_pass http://bouncer:8083;
    }

    location /api/v1/shipment {
      include nginx-cors.conf;

      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_pass http://shipper:8087;
    }

    location /api/v1/recipient {
      include nginx-cors.conf;

      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_pass http://shipper:8087;
    }

    location /api/v1/substitution {
      include nginx-cors.conf;

      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_pass http://substituter:8090;
    }

    location /api/v1/inspection {
      include nginx-cors.conf;

      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_pass http://inspecter:8091;
    }

    location /api/v1/bindings {
      include nginx-cors.conf;

      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_pass http://bindings:8092;
    }

    location /oauth {
      include nginx-cors.conf;

      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_pass http://guestlister:8383;
    }
  }
}

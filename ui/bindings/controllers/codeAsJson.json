[
    {"code":"library(truncnorm)","codeblock":1,"codeline":4,"codeType":"library"},{"code":"ComputeDamage <- function(he, v, d, s, q, FA, IA, BA, EP, IH, BH, GL, NF, BT, BS, PD, PT, FL, YY, LM, repVal, up, uncert, nrSim = NA) {","codeblock":1,"codeline":13,"codeType":"function"},
    {"code":"  he <- pmin(he, NF * IH * 1.05)","codeblock":1,"codeline":16,"codeType":"variable"},{"code":"  nf <- rep(NF, length(he))","codeblock":1,"codeline":17,"codeType":"variable"},
    {"code":"  h <- round((he - GL), 3)","codeblock":1,"codeline":18,"codeType":"variable"},{"code":"  h <- (h > 0) * h","codeblock":1,"codeline":19,"codeType":""},
    {"code":"  IP <- 2.5 * EP       # Internal perimeter (m)","codeblock":1,"codeline":22,"codeType":"variable"},
    {"code":"  BP <- 4 * sqrt(BA)   # Basement perimeter (m)","codeblock":1,"codeline":23,"codeType":"variable"},
    {"code":"  BL <- GL - 0.3 - BH  # Basement level (m)","codeblock":1,"codeline":24,"codeType":"variable"},
    {"code":"  RVN <- repVal * FA * NF  ","codeblock":1,"codeline":27,"codeType":"variable"},
    {"code":"  age <- 2015 - YY","codeblock":1,"codeline":28,"codeType":"variable"},{"code":"  decay <- min(0.01 * age / LM, 0.3)","codeblock":1,"codeline":29,"codeType":"variable"},
    {"code":"  RVU <- RVN * (1 - decay)","codeblock":1,"codeline":30,"codeType":"variable"},
    {"code":"  frag1 <- round(ptruncnorm(d, a = 12, b = 36, mean = 24, sd = 24/6), 3)","codeblock":1,"codeline":35,"codeType":"variable"},
    {"code":"  frag2_1f <- round(ptruncnorm(h, a = 0.2, b = 0.6, mean = 0.4, sd = .4/6), 3)","codeblock":1,"codeline":37,"codeType":"variable"},
    {"code":"  frag2_2f <- round(ptruncnorm(h, a = 0.2 + IH, b = 0.6 + IH, mean = 0.4 + IH, sd = .4/6), 3)","codeblock":1,"codeline":38,"codeType":"variable"},
    {"code":"  frag3_1f <- round(ptruncnorm(h, a = 1.5, b = 2.0, mean = 1.75, sd = .5/6), 3)","codeblock":1,"codeline":40,"codeType":"variable"},
    {"code":"  frag3_2f <- round(ptruncnorm(h, a = 1.5 + IH, b = 2.0 + IH, mean = 1.75 + IH, sd = .5/6), 3)","codeblock":1,"codeline":41,"codeType":"variable"},
    {"code":"  frag4 <- round(ptruncnorm(v, a = 1, b = 1.5, mean = 1.25, sd = .5/6), 3)","codeblock":1,"codeline":43,"codeType":"variable"},
    {"code":"  frag5_1f <- round(ptruncnorm(h, a = 0.4, b = 0.8, mean = 0.6, sd = .4/6), 3)","codeblock":1,"codeline":45,"codeType":"variable"},
    {"code":"  frag5_2f <- round(ptruncnorm(h, a = 0.4 + IH, b = 0.8 + IH, mean = 0.6 + IH, sd = .4/6), 3)","codeblock":1,"codeline":46,"codeType":"variable"},
    {"code":"  frag6_1f <- round(ptruncnorm(h, a = 1.2, b = 1.8, mean = 1.5, sd = .5/6), 3)","codeblock":1,"codeline":48,"codeType":"variable"},
    {"code":"  frag6_2f <- round(ptruncnorm(h, a = 1.2 + IH, b = 1.8 + IH, mean = 1.5 + IH, sd = 0.5/6), 3)","codeblock":1,"codeline":49,"codeType":"variable"},{"code":"  frag7 <- round(ptruncnorm(v, a = 0.8, b = 1, mean = 0.9, sd = .2/6), 3)","codeblock":1,"codeline":51,"codeType":"variable"},
    {"code":"  frag8 <- round(pnorm((he * v), mean = 5, sd = 4/6), 3) * (v >= 2)","codeblock":1,"codeline":53,"codeType":"variable"},{"code":"  if (uncert == 0) {","codeblock":1,"codeline":57,"codeType":"conditional"},{"code":"    dr1 <- frag1","codeblock":1,"codeline":58,"codeType":"variable"},{"code":"    dr2 <- frag2_1f + frag2_2f","codeblock":1,"codeline":59,"codeType":"variable"},{"code":"    dr3 <- frag3_1f + frag3_2f","codeblock":1,"codeline":60,"codeType":"variable"},{"code":"    dr4 <- frag4","codeblock":1,"codeline":61,"codeType":"variable"},{"code":"    dr5 <- frag5_1f + frag5_2f","codeblock":1,"codeline":62,"codeType":"variable"},{"code":"    dr6 <- frag6_1f + frag6_2f","codeblock":1,"codeline":63,"codeType":"variable"},{"code":"    dr7 <- frag7","codeblock":1,"codeline":64,"codeType":"variable"},{"code":"    dr8 <- frag8","codeblock":1,"codeline":65,"codeType":"variable"},{"code":"  } else {","codeblock":1,"codeline":66,"codeType":""},{"code":"    dr1 <- sample(c(0, 1), nrSim, T, c(1 - frag1, frag1))","codeblock":1,"codeline":67,"codeType":"variable"},{"code":"    dr2_1f <- sample(c(0, 1), nrSim, T, c(1 - frag2_1f, frag2_1f))","codeblock":1,"codeline":68,"codeType":"variable"},{"code":"    dr2_2f <- sample(c(0, 1), nrSim, T, c(1 - frag2_2f, frag2_2f))","codeblock":1,"codeline":69,"codeType":"variable"},{"code":"    dr2 <- dr2_1f + dr2_2f","codeblock":1,"codeline":70,"codeType":"variable"},{"code":"    dr3_1f <- sample(c(0, 1), nrSim, T, c(1 - frag3_1f, frag3_1f))","codeblock":1,"codeline":71,"codeType":"variable"},{"code":"    dr3_2f <- sample(c(0, 1), nrSim, T, c(1 - frag3_2f, frag3_2f))","codeblock":1,"codeline":72,"codeType":"variable"},{"code":"    dr3 <- dr3_1f + dr3_2f","codeblock":1,"codeline":73,"codeType":"variable"},{"code":"    dr4 <- sample(c(0, 1), nrSim, T, c(1 - frag4, frag4))","codeblock":1,"codeline":74,"codeType":"variable"},{"code":"    dr5_1f <- sample(c(0, 1), nrSim, T, c(1 - frag5_1f, frag5_1f))","codeblock":1,"codeline":75,"codeType":"variable"},{"code":"    dr5_2f <- sample(c(0, 1), nrSim, T, c(1 - frag5_2f, frag5_2f))","codeblock":1,"codeline":76,"codeType":"variable"},{"code":"    dr5 <- dr5_1f + dr5_2f","codeblock":1,"codeline":77,"codeType":"variable"},{"code":"    dr6_1f <- sample(c(0, 1), nrSim, T, c(1 - frag6_1f, frag6_1f))","codeblock":1,"codeline":78,"codeType":"variable"},{"code":"    dr6_2f <- sample(c(0, 1), nrSim, T, c(1 - frag6_2f, frag6_2f))","codeblock":1,"codeline":79,"codeType":"variable"},{"code":"    dr6 <- dr6_1f + dr6_2f","codeblock":1,"codeline":80,"codeType":"variable"},{"code":"    dr7 <- sample(c(0, 1), nrSim, T, c(1 - frag7, frag7))","codeblock":1,"codeline":81,"codeType":"variable"},{"code":"    dr8 <- sample(c(0, 1), nrSim, T, c(1 - frag8, frag8))","codeblock":1,"codeline":82,"codeType":"variable"},{"code":"  }  ","codeblock":1,"codeline":83,"codeType":""},{"code":"  ","codeblock":1,"codeline":84,"codeType":"variableCall"},{"code":"  C1 <- up[\"pumping\",] * (he>=0) * (                       # unit price","codeblock":1,"codeline":97,"codeType":"variable"},{"code":"          IA * (max(-GL, 0)) +                             # volume remaining in first storey after the event, if GL < 0","codeblock":1,"codeline":98,"codeType":"inlineFunction"},{"code":"          BA * (-BL - min(0.3, (GL>0 & GL<0.3)*(0.3-GL)))  # volume remaining in basement after the event (h_slab = 0.30)","codeblock":1,"codeline":99,"codeType":"inlineFunction"},{"code":"          ) * (1 - 0.2*(BT==3))                            # economies of scale ","codeblock":1,"codeline":100,"codeType":""},{"code":"  C2 <- up[\"disposal\",] *           # unit price","codeblock":1,"codeline":103,"codeType":"variable"},{"code":"          s * (1 + (q==1)*0.4) * (  # sediment concentration (s); presence of pollutants (q)","codeblock":1,"codeline":104,"codeType":"inlineFunction"},{"code":"          IA * h +                  # volume in storeys above ground during the event","codeblock":1,"codeline":105,"codeType":"variableCall"},{"code":"          BA * BH                   # volume in basement during the event","codeblock":1,"codeline":106,"codeType":"variableCall"},{"code":"          ) * (1 - 0.2*(BT==3))     # economies of scale","codeblock":1,"codeline":107,"codeType":""},{"code":"  C3 <- up[\"cleaning\",] *                        # unit price","codeblock":1,"codeline":110,"codeType":"variable"},{"code":"          (1 + (q==1)*0.4) * (                   # presence of pollutants (q)","codeblock":1,"codeline":111,"codeType":"inlineFunction"},{"code":"          IA * pmin(nf, ceiling(h/IH)) + IP*h +  # affected area in storeys above ground","codeblock":1,"codeline":112,"codeType":"inlineFunction"},{"code":"          BA + BP*BH                             # affected area in basement","codeblock":1,"codeline":113,"codeType":"variableCall"},{"code":"          ) * (1 - 0.2*(BT==3))                  # economies of scale","codeblock":1,"codeline":114,"codeType":""},{"code":"  C4 <- up[\"dehumidification\",] * dr1 * (               # unit price; duration damage ratio","codeblock":1,"codeline":117,"codeType":"variable"},{"code":"          IA * IH * pmin(nf, ceiling(h/IH)) * (he>0) +  # volume in storeys above ground","codeblock":1,"codeline":118,"codeType":"inlineFunction"},{"code":"          BA * BH                                       # basement volume","codeblock":1,"codeline":119,"codeType":"variableCall"},{"code":"          ) * (1 - 0.2*(BT==3))                         # economies of scale","codeblock":1,"codeline":120,"codeType":""},{"code":"  R1 <- up[\"screedremoval\",] * IA * (   # unit price * internal area","codeblock":1,"codeline":125,"codeType":"variable"},{"code":"          (FL>1) * dr1 * pmin(nf, dr2)  # if pavement is wood, remove it","codeblock":1,"codeline":126,"codeType":"inlineFunction"},{"code":"          ) * (1 - 0.2*(BT==3))         # economies of scale","codeblock":1,"codeline":127,"codeType":""},{"code":"  R2 <- up[\"parquetremoval\",] * (FL>1) *  # if pavement is wood, remove it","codeblock":1,"codeline":130,"codeType":"variable"},{"code":"          dr1 * pmin(nf, dr2) *","codeblock":1,"codeline":131,"codeType":"inlineFunction"},{"code":"          IA * (1 - 0.2*(BT==3))          # internal area and economies of scale","codeblock":1,"codeline":132,"codeType":""},{"code":"  R3 <- up[\"baseboardremoval\",] *                      # unit price","codeblock":1,"codeline":135,"codeType":"variable"},{"code":"          dr1 * pmin(nf, ceiling((h-0.05)/IH)) * IP *","codeblock":1,"codeline":136,"codeType":"inlineFunction"},{"code":"          (1 - 0.2*(BT==3))                            # economies of scale","codeblock":1,"codeline":137,"codeType":""},{"code":"  R4 <- up[\"partitionsremoval\",] * dr1 *  # unit price; duration damage ratio","codeblock":1,"codeline":140,"codeType":"variable"},{"code":"          (1+(BS==1)*0.20) * 0.5 * IP *   # perimeter","codeblock":1,"codeline":141,"codeType":""},{"code":"          IH * pmin(nf, dr3) *            # height","codeblock":1,"codeline":142,"codeType":"inlineFunction"},{"code":"          (1 - 0.2*(BT==3))               # economies of scale","codeblock":1,"codeline":143,"codeType":""},{"code":"  R5 <- up[\"plasterboardremoval\",] *                               # unit price","codeblock":1,"codeline":146,"codeType":"variable"},{"code":"          IA * 0.2 * pmin(nf, ceiling((h-(IH-.5))/IH)) * (FL>1) *","codeblock":1,"codeline":147,"codeType":"inlineFunction"},{"code":"          (1 - 0.2*(BT==3))                                        # economies of scale","codeblock":1,"codeline":148,"codeType":""},{"code":"  R6 <- up[\"extplasterremoval\",] *       # unit price","codeblock":1,"codeline":151,"codeType":"variable"},{"code":"          pmax(q==1, LM<=1, dr1, dr4) *  # damage ratios","codeblock":1,"codeline":152,"codeType":"inlineFunction"},{"code":"          EP * (he+1.0) *                # area to replace","codeblock":1,"codeline":153,"codeType":""},{"code":"          (1 - 0.2*(BT==3))              # economies of scale","codeblock":1,"codeline":154,"codeType":""},{"code":"  R7 <- up[\"intplasterremoval\",] *  # unit price","codeblock":1,"codeline":157,"codeType":"variable"},{"code":"          pmax(q==1, LM<=1, dr1) *  # damage ratios","codeblock":1,"codeline":158,"codeType":"inlineFunction"},{"code":"          (IP*(h+1.0) + BP*BH) *    # area to replace","codeblock":1,"codeline":159,"codeType":""},{"code":"          (1 - 0.2*(BT==3))         # economies of scale","codeblock":1,"codeline":160,"codeType":""},{"code":"  R8 <- up[\"doorsremoval\",] *        # unit price","codeblock":1,"codeline":163,"codeType":"variable"},{"code":"          pmax(dr4, dr1) * (         # damage ratios","codeblock":1,"codeline":164,"codeType":"inlineFunction"},{"code":"          pmin(nf, dr5) * 0.12*IA +  # door area in storeys above ground","codeblock":1,"codeline":165,"codeType":"inlineFunction"},{"code":"          0.03*BA ) *                # door area in basement","codeblock":1,"codeline":166,"codeType":""},{"code":"          (1 - 0.2*(BT==3))          # economies of scale","codeblock":1,"codeline":167,"codeType":""},{"code":"  R9 <- up[\"windowsremoval\",] *      # unit price","codeblock":1,"codeline":170,"codeType":"variable"},{"code":"          pmax(dr7, dr1) *           # damage ratios","codeblock":1,"codeline":171,"codeType":"inlineFunction"},{"code":"          pmin(nf, dr6) * 0.12*IA *  # window area","codeblock":1,"codeline":172,"codeType":"inlineFunction"},{"code":"          (1 - 0.2*(BT==3))          # economies of scale","codeblock":1,"codeline":173,"codeType":""},{"code":"  R10 <- up[\"boilerremoval\",] * IA * (               # unit price; internal area","codeblock":1,"codeline":176,"codeType":"variable"},{"code":"          (PD==1) * ((BA>0) + (BA==0)*(h>1.6)) +     # if heating system is not distributed","codeblock":1,"codeline":177,"codeType":"conditional"},{"code":"          (PD==2) * (pmin(nf, ceiling((h-1.6)/IH)))  # if heating system is distributed","codeblock":1,"codeline":178,"codeType":"inlineFunction"},{"code":"          ) * (1 - 0.2*(BT==3))                      # economies of scale","codeblock":1,"codeline":179,"codeType":""},{"code":"  N1 <- up[\"partitionsreplace\",] * dr1 *  # unit price; duration damage ratio","codeblock":1,"codeline":184,"codeType":"variable"},{"code":"          (1+(BS==1)*0.20) * 0.5 * IP *   # perimeter","codeblock":1,"codeline":185,"codeType":""},{"code":"          IH * pmin(nf, dr3) *            # height","codeblock":1,"codeline":186,"codeType":"inlineFunction"},{"code":"          (1 - 0.2*(BT==3))               # economies of scale","codeblock":1,"codeline":187,"codeType":""},{"code":"  N2 <- up[\"screedreplace\",] * IA * (   # unit price; internal area","codeblock":1,"codeline":190,"codeType":"variable"},{"code":"          (FL>1) * dr1 * pmin(nf, dr2)  # if pavement is wood, remove it because it is damaged","codeblock":1,"codeline":191,"codeType":"inlineFunction"},{"code":"          ) * (1 - 0.2*(BT==3))         # economies of scale","codeblock":1,"codeline":192,"codeType":""},{"code":"  N3 <- up[\"plasterboardreplace\",] *                               # unit price","codeblock":1,"codeline":195,"codeType":"variable"},{"code":"          IA * 0.2 * pmin(nf, ceiling((h-(IH-.5))/IH)) * (FL>1) * ","codeblock":1,"codeline":196,"codeType":"inlineFunction"},{"code":"          (1 - 0.2*(BT==3))                                        # economies of scale","codeblock":1,"codeline":197,"codeType":""},{"code":"  S1 <- up[\"soilconsolidation\",] * dr8 *","codeblock":1,"codeline":201,"codeType":"variable"},{"code":"          FA * NF * IH * (0.01 + (BS==1)*0.01) *","codeblock":1,"codeline":202,"codeType":""},{"code":"          (1 - 0.2*(BT==3))","codeblock":1,"codeline":203,"codeType":""},{"code":"  S2 <- up[\"localrepair\",] * (BS==2) * dr8 *","codeblock":1,"codeline":205,"codeType":"variable"},{"code":"          EP * 0.5 * he * (1+s) *","codeblock":1,"codeline":206,"codeType":""},{"code":"          (1 - 0.2*(BT==3))","codeblock":1,"codeline":207,"codeType":""},{"code":"  S3 <- up[\"pillarretrofitting\",] * (BS==1) * dr8 * ","codeblock":1,"codeline":209,"codeType":"variable"},{"code":"          0.15 * EP * he *","codeblock":1,"codeline":210,"codeType":"variableCall"},{"code":"          (1 - 0.2*(BT==3))","codeblock":1,"codeline":211,"codeType":""},{"code":"  F1 <- up[\"extplasterreplace\",] * FL *  # unit price (affected by finishing level)","codeblock":1,"codeline":216,"codeType":"variable"},{"code":"          pmax(q==1, LM<=1, dr1, dr4) *  # damage ratios","codeblock":1,"codeline":217,"codeType":"inlineFunction"},{"code":"          EP * (he+1.0) *                # area to replace","codeblock":1,"codeline":218,"codeType":""},{"code":"          (1 - 0.2*(BT==3))              # economies of scale","codeblock":1,"codeline":219,"codeType":""},{"code":"  F2 <- up[\"intplasterreplace\",] * FL *  # unit price (affected by finishing level)","codeblock":1,"codeline":222,"codeType":"variable"},{"code":"          pmax(q==1, LM<=1, dr1) *       # damage ratios","codeblock":1,"codeline":223,"codeType":"inlineFunction"},{"code":"          (IP*(h+1.0) + BP*BH) *         # area to replace","codeblock":1,"codeline":224,"codeType":""},{"code":"          (1 - 0.2*(BT==3))              # economies of scale","codeblock":1,"codeline":225,"codeType":""},{"code":"  F3 <- up[\"extpainting\",] * pmin(nf, ceiling(he/IH))*IH*EP * FL * (1-0.2*(BT==3))","codeblock":1,"codeline":229,"codeType":"variable"},{"code":"  F4 <- up[\"intpainting\",] * (pmin(nf, ceiling(h/IH))*IH*IP + BP*BH*(FL>1 & BT==1)) * FL * (1-0.2*(BT==3))","codeblock":1,"codeline":230,"codeType":"variable"},{"code":"  F5 <- up[\"parquetreplace\",] * (FL>1) *  # if pavement is wood, remove it because it is damaged","codeblock":1,"codeline":233,"codeType":"variable"},{"code":"          dr1 * pmin(nf, dr2) *","codeblock":1,"codeline":234,"codeType":"inlineFunction"},{"code":"          IA * (1 - 0.2*(BT==3))          # internal area and economies of scale","codeblock":1,"codeline":235,"codeType":""},{"code":"  F6 <- up[\"baseboardreplace\",] * dr1 *          # unit price; duration damage ratio","codeblock":1,"codeline":238,"codeType":"variable"},{"code":"          pmin(nf, ceiling((h-0.05)/IH)) * IP *","codeblock":1,"codeline":239,"codeType":"inlineFunction"},{"code":"          (1 - 0.2*(BT==3))                      # economies of scale","codeblock":1,"codeline":240,"codeType":""},{"code":"  W1 <- up[\"doorsreplace\",] *        # unit price","codeblock":1,"codeline":245,"codeType":"variable"},{"code":"          pmax(dr4, dr1) * (         # damage ratios","codeblock":1,"codeline":246,"codeType":"inlineFunction"},{"code":"          pmin(nf, dr5) * 0.12*IA +  # door area in storeys above ground","codeblock":1,"codeline":247,"codeType":"inlineFunction"},{"code":"          0.03*BA ) *                # door area in basement","codeblock":1,"codeline":248,"codeType":""},{"code":"          (1 + (FL>1)) *             # finishing level","codeblock":1,"codeline":249,"codeType":""},{"code":"          (1 - 0.2*(BT==3))          # economies of scale","codeblock":1,"codeline":250,"codeType":""},{"code":"  W2 <- up[\"windowsreplace\",] *      # unit price","codeblock":1,"codeline":253,"codeType":"variable"},{"code":"          pmax(dr7, dr1) *           # damage ratios","codeblock":1,"codeline":254,"codeType":"inlineFunction"},{"code":"          pmin(nf, dr6) * 0.12*IA *  # window area","codeblock":1,"codeline":255,"codeType":"inlineFunction"},{"code":"          (1 + (FL>1)) *             # finishing level","codeblock":1,"codeline":256,"codeType":""},{"code":"          (1 - 0.2*(BT==3))          # economies of scale","codeblock":1,"codeline":257,"codeType":""},{"code":"  P1 <- up[\"boilerreplace\",] * IA * (                    # unit price; internal area","codeblock":1,"codeline":262,"codeType":"variable"},{"code":"          (PD==1) * ((BA>0) + (BA==0)*(h>1.6)) +         # if heating system is not distributed","codeblock":1,"codeline":263,"codeType":"conditional"},{"code":"          (PD==2) * (pmin(nf, ceiling((h-1.6)/IH))) ) *  # if heating system is distributed","codeblock":1,"codeline":264,"codeType":"inlineFunction"},{"code":"          (1 + 0.25 * xor(BT==1, BT==2))                 # over-dimensioning coefficient","codeblock":1,"codeline":265,"codeType":"inlineFunction"},{"code":"  P2 <- up[\"radiatorpaint\",] * (PT==1) * pmin(nf, ceiling((h-0.2)/IH)) * IA/20 * (1-0.2*(BT==3))","codeblock":1,"codeline":268,"codeType":"variable"},{"code":"  P3 <- up[\"underfloorheatingreplace\",] * IA *  # unit price; internal area","codeblock":1,"codeline":271,"codeType":"variable"},{"code":"          (PT==2) * (                           # is heating system type is underfloor heating","codeblock":1,"codeline":272,"codeType":""},{"code":"          (FL>1) * dr1 * pmin(nf, dr2)          # if pavement is wood","codeblock":1,"codeline":273,"codeType":"inlineFunction"},{"code":"          ) * (1 - 0.2*(BT==3))                 # economies of scale","codeblock":1,"codeline":274,"codeType":""},{"code":"  P4 <- up[\"electricalsystreplace\",] * IA * (      # unit price; internal area","codeblock":1,"codeline":277,"codeType":"variable"},{"code":"          pmin(nf, ceiling((h-0.2)/IH)) * 0.4 +    # 0 - 0.20 m","codeblock":1,"codeline":278,"codeType":"inlineFunction"},{"code":"          pmin(nf, ceiling((h-1.1)/IH)) * 0.3 +    # 0.20 - 1.10 m","codeblock":1,"codeline":279,"codeType":"inlineFunction"},{"code":"          pmin(nf, ceiling((h-1.5)/IH)) * 0.3 ) *  # 1.10 - 1.50 m","codeblock":1,"codeline":280,"codeType":"inlineFunction"},{"code":"          (1 + (FL>1)) *                           # finishing level - sophistication of electrical system","codeblock":1,"codeline":281,"codeType":""},{"code":"          (1 - 0.2*(BT==3))                        # economies of scale","codeblock":1,"codeline":282,"codeType":""},{"code":"  P5 <- up[\"plumbingsystreplace\",] * IA *          # unit price; internal area","codeblock":1,"codeline":285,"codeType":"variable"},{"code":"          (s>0.10 | q==1) * (                      # conditions for damage to occur","codeblock":1,"codeline":286,"codeType":"forLoop"},{"code":"          pmin(nf, ceiling((h-0.15)/IH)) * 0.1 +   # 0 - 0.15 m","codeblock":1,"codeline":287,"codeType":"inlineFunction"},{"code":"          pmin(nf, ceiling((h-0.4)/IH)) * 0.2 +    # 0.15 - 0.40 m","codeblock":1,"codeline":288,"codeType":"inlineFunction"},{"code":"          pmin(nf, ceiling((h-0.9)/IH)) * 0.2 ) *  # 0.40 - 0.90 m","codeblock":1,"codeline":289,"codeType":"inlineFunction"},{"code":"          (1 + (FL>1)) *                           # finishing level - sophistication of plumbing system","codeblock":1,"codeline":290,"codeType":""},{"code":"          (1 - 0.2*(BT==3))                        # economies of scale","codeblock":1,"codeline":291,"codeType":""},{"code":"  dmgCleanUp \t     <- C1 + C2 + C3","codeblock":1,"codeline":293,"codeType":"variable"},{"code":"  dmgRemoval \t     <- R1 + R2 + R3 + R4 + R5 + R6 + R7 + R8 + R9 + R10 ","codeblock":1,"codeline":294,"codeType":"variable"},{"code":"  dmgNonStructural <- N1 + N2 + N3","codeblock":1,"codeline":295,"codeType":"variable"},{"code":"  dmgStructural    <- S1 + S2 + S3 ","codeblock":1,"codeline":296,"codeType":"variable"},{"code":"  dmgFinishing     <- F1 + F2 + F3 + F4 + F5 + W1 + W2","codeblock":1,"codeline":297,"codeType":"variable"},{"code":"  dmgSystems       <- P1 + P2 + P3 + P4 + P5 ","codeblock":1,"codeline":298,"codeType":"variable"},{"code":"  absDamage <- dmgCleanUp + dmgRemoval + dmgNonStructural + dmgStructural + dmgFinishing + dmgSystems","codeblock":1,"codeline":300,"codeType":"variable"},{"code":"  relDamage <- absDamage / RVN","codeblock":1,"codeline":301,"codeType":"variable"},{"code":"  groupDamage <- cbind(dmgCleanUp, dmgRemoval, dmgNonStructural, dmgStructural, dmgFinishing, dmgSystems)","codeblock":1,"codeline":302,"codeType":"variable"},{"code":"  componentDamage <- cbind(C1, C2, C3, ","codeblock":1,"codeline":303,"codeType":"variable"},{"code":"    R1, R2, R3, R4, R5, R6, R7, R8, R9, R10, ","codeblock":1,"codeline":304,"codeType":"variableCall"},{"code":"    N1, N2, N3, ","codeblock":1,"codeline":305,"codeType":"variableCall"},{"code":"    S1, S2, S3, ","codeblock":1,"codeline":306,"codeType":"variableCall"},{"code":"    F1, F2, F3, F4, F5, W1, W2, ","codeblock":1,"codeline":307,"codeType":"variableCall"},{"code":"    P1, P2, P3, P4, P5)","codeblock":1,"codeline":308,"codeType":""},{"code":"  return(list(\"absDamage\" = absDamage, \"relDamage\" = relDamage, \"groupDamage\" = groupDamage, \"componentDamage\" = componentDamage))","codeblock":1,"codeline":310,"codeType":"inlineFunction"},{"code":"}","codeblock":1,"codeline":311,"codeType":""},{"code":"he <- seq(0, 5, 0.01)  # water depth (m)","codeblock":1,"codeline":316,"codeType":"variable"},{"code":"velocity <- 0.5   # velocity (m/s)","codeblock":1,"codeline":317,"codeType":"variable"},{"code":"sediment <- 0.05  # sediment concentration (-)","codeblock":1,"codeline":318,"codeType":"variable"},{"code":"duration <- 24    # flood duration (h)","codeblock":1,"codeline":319,"codeType":"variable"},{"code":"q <- 1     # water quality (presence of pollutants) 1=yes 0=no","codeblock":1,"codeline":320,"codeType":"variable"},{"code":"FA <- 100       # Footprint area (m2)","codeblock":1,"codeline":326,"codeType":"variable"},{"code":"IA <- 0.9 * FA  # Internal area (m2)","codeblock":1,"codeline":327,"codeType":"variable"},{"code":"BA <- 0.5 * FA  # Basement area (m2)","codeblock":1,"codeline":328,"codeType":"variable"},{"code":"EP <- 40        # External Perimeter (m)","codeblock":1,"codeline":329,"codeType":"variable"},{"code":"IH <- 3.5       # Interstorey height (m)","codeblock":1,"codeline":330,"codeType":"variable"},{"code":"BH <- 3.2       # Basement height (m)","codeblock":1,"codeline":331,"codeType":"variable"},{"code":"GL <- 0.1       # Ground floor level (m)","codeblock":1,"codeline":332,"codeType":"variable"},{"code":"NF <- 2         # Number of floors","codeblock":1,"codeline":333,"codeType":"variable"},{"code":"BT <- 1     # Building type: 1- Detached, 2- Semi-detached, 3- Apartment house ","codeblock":1,"codeline":336,"codeType":"variable"},{"code":"BS <- 2     # Building structure: 1- Reinforced concrete, 2- Masonry, 3- Wood","codeblock":1,"codeline":337,"codeType":"variable"},{"code":"PD <- 1     # Plant distribution: 1- Centralized, 2- Distributed","codeblock":1,"codeline":338,"codeType":"variable"},{"code":"PT <- 1\t    # Heating system type: 1- Radiator, 2- Underfloor heating","codeblock":1,"codeline":339,"codeType":"variable"},{"code":"FL <- 1.2   # Finishing level coefficient: High 1.2, Medium 1, Low 0.8","codeblock":1,"codeline":340,"codeType":"variable"},{"code":"YY <- 1994  # Year of construction","codeblock":1,"codeline":341,"codeType":"variable"},{"code":"LM <- 1.1   # Level of maintanance coefficient: High 1.1, Medium 1, Low 0.9","codeblock":1,"codeline":342,"codeType":"variable"},{"code":"up <- read.table(\"unit_prices.txt\")","codeblock":1,"codeline":346,"codeType":"variable"},{"code":"repValData <- read.table(\"replacement_values.txt\", header = TRUE)","codeblock":1,"codeline":349,"codeType":"variable"},{"code":"repVal <- repValData[BS, BT]","codeblock":1,"codeline":350,"codeType":"variable"},{"code":"uncert <- 0","codeblock":1,"codeline":353,"codeType":"variable"},{"code":"if (!uncert) {","codeblock":1,"codeline":355,"codeType":"conditional"},{"code":"  modelOutput <- ComputeDamage(he, velocity, duration, sediment, q, FA, IA, BA, EP, IH, BH, GL, NF, BT, BS, PD, PT, FL, YY, LM, repVal, up, uncert)","codeblock":1,"codeline":358,"codeType":"variable"},{"code":"} else if (uncert) {","codeblock":1,"codeline":359,"codeType":"conditional"},{"code":"  nrSim <- 2000","codeblock":1,"codeline":365,"codeType":"variable"},{"code":"  statMat <- matrix(NA, nrow = length(he), ncol = 4)","codeblock":1,"codeline":366,"codeType":"variable"},{"code":"  for (i in 1:length(he)) {","codeblock":1,"codeline":367,"codeType":"inlineFunction"},{"code":"    modelOutput <- ComputeDamage(he[i], velocity, duration, sediment, q, ","codeblock":1,"codeline":368,"codeType":"variable"},{"code":"                    FA, IA, BA, EP, IH, BH, GL, NF, BT, BS, PD, PT, FL, YY, LM,","codeblock":1,"codeline":369,"codeType":"variableCall"},{"code":"                    repVal, up, uncert, nrSim)","codeblock":1,"codeline":370,"codeType":""},{"code":"    statMat[i, 1] <- quantile(modelOutput$absDamage, .05)","codeblock":1,"codeline":373,"codeType":"variable"},{"code":"    statMat[i, 2] <- mean(modelOutput$absDamage)","codeblock":1,"codeline":374,"codeType":"variable"},{"code":"    statMat[i, 3] <- quantile(modelOutput$absDamage, .95)","codeblock":1,"codeline":375,"codeType":"variable"},{"code":"    statMat[i, 4] <- mean(modelOutput$relDamage)","codeblock":1,"codeline":376,"codeType":"variable"},{"code":"  }","codeblock":1,"codeline":377,"codeType":""},{"code":"}","codeblock":1,"codeline":378,"codeType":""},{"code":"par(mar = c(5, 4.2, 4, 4.5))","codeblock":1,"codeline":380,"codeType":"inlineFunction"},{"code":"plotFigure1 = function(he,modelOutput){","codeblock":1,"codeline":382,"codeType":"function"},{"code":"  plot(he, modelOutput$absDamage, type = \"l\", lwd = 2, ylim = c(0, max(modelOutput$absDamage) * 1.12), xlab = \"Water depth (m)\", ylab = \"Damage (€)\", main = \"Building damage\", panel.first = grid(NULL))","codeblock":1,"codeline":384,"codeType":"inlineFunction"},{"code":"  ","codeblock":1,"codeline":385,"codeType":"variableCall"},{"code":"  lines(he, modelOutput$groupDamage[, \"dmgCleanUp\"], lwd = 2, col = \"green4\")","codeblock":1,"codeline":386,"codeType":"inlineFunction"},{"code":"  lines(he, modelOutput$groupDamage[, \"dmgRemoval\"], lwd = 2, col = \"blue4\")","codeblock":1,"codeline":387,"codeType":"inlineFunction"},{"code":"  lines(he, modelOutput$groupDamage[, \"dmgNonStructural\"], lwd = 2, col = \"darkorange\")","codeblock":1,"codeline":388,"codeType":"inlineFunction"},{"code":"  lines(he, modelOutput$groupDamage[, \"dmgStructural\"], lwd = 2, col = \"firebrick1\")","codeblock":1,"codeline":389,"codeType":"inlineFunction"},{"code":"  lines(he, modelOutput$groupDamage[, \"dmgFinishing\"], lwd = 2, col = \"gold2\")","codeblock":1,"codeline":390,"codeType":"inlineFunction"},{"code":"  lines(he, modelOutput$groupDamage[, \"dmgSystems\"], lwd = 2, col = \"green1\")","codeblock":1,"codeline":391,"codeType":"inlineFunction"},{"code":"  ","codeblock":1,"codeline":392,"codeType":"variableCall"},{"code":"  par(new = TRUE)","codeblock":1,"codeline":393,"codeType":"inlineFunction"},{"code":"  plot(he, modelOutput$relDamage, type = \"l\", lwd = 2, axes = FALSE, ylim = c(0, max(modelOutput$relDamage) * 1.12), xlab = NA, ylab = NA)","codeblock":1,"codeline":394,"codeType":"inlineFunction"},{"code":"  axis(side = 4)","codeblock":1,"codeline":395,"codeType":"inlineFunction"},{"code":"  mtext(side = 4, line = 3, \"Relative damage\")","codeblock":1,"codeline":396,"codeType":"inlineFunction"},{"code":"  legend(\"topleft\", bg = \"white\", c(\"damage total\",\"cleanup\",\"removal\",\"non structural\",\"structural\",\"finishing+WD\",\"systems\"), fill = c(\"black\",\"green4\",\"blue4\",\"darkorange\",\"firebrick1\",\"gold2\",\"green1\"))","codeblock":1,"codeline":397,"codeType":"inlineFunction"},
    {"code":"}","codeblock":1,"codeline":398,"codeType":""},
    {"code":"plotFigure1(he,modelOutput)","codeblock":1,"codeline":400,"codeType":"inlineFunction"}]